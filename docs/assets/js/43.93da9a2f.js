(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{381:function(_,v,t){"use strict";t.r(v);var e=t(12),r=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("MySQL 中，根据索引树叶结点存放数据行还是数据行的地址，可以将索引分为两类：")]),_._v(" "),v("ul",[v("li",[_._v("存放数据行：聚集索引")]),_._v(" "),v("li",[_._v("存放数据行地址：非聚集索引")])]),_._v(" "),v("p",[_._v("InnoDB 使用聚集索引，MyISAM 使用非聚集索引。")]),_._v(" "),v("h2",{attrs:{id:"_1-聚集索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-聚集索引"}},[_._v("#")]),_._v(" 1.聚集索引")]),_._v(" "),v("h3",{attrs:{id:"_1-1-介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-介绍"}},[_._v("#")]),_._v(" 1.1 介绍")]),_._v(" "),v("p",[_._v("聚集索引（Clustered Index）也叫聚簇索引，一般以主键建立索引。")]),_._v(" "),v("p",[_._v("在 InnoDB 中如果没有定义主键，会选择第一个非空唯一索引来代替。如果没有这样的索引，InnoDB 会自动生成一个不可见的列名为 ROW_ID，索引名为 GEN_CLUST_INDEX 的聚簇索引，该列是一个 6 字节的自增数值，随着插入而自增。")]),_._v(" "),v("p",[_._v("聚集索引（Clustered Index）的索引和表数据放在一个文件，"),v("strong",[_._v("行数据存储存在索引树叶子结点上，通过索引可直接获得行数据")]),_._v("。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/direct/1d4cc2c9f6204d5e805afbe6d3f495b5.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("p",[_._v("与聚集索引配套使用的是二级索引（Secondary Indexes），也叫辅助索引。")]),_._v(" "),v("p",[_._v("一个表可以有多个二级索引。")]),_._v(" "),v("p",[v("strong",[_._v("二级索引树叶子结点存储的是主键。")])]),_._v(" "),v("p",[_._v("若对非主键字段建立的索引就是二级索引，根据二级索引搜索，则需要两步：")]),_._v(" "),v("ol",[v("li",[_._v("第一步在二级索引（辅助索引）B+ 树中检索，到达其叶子结点获取对应的主键。")]),_._v(" "),v("li",[_._v("第二步使用主键在主键索引 B+ 树中再执行一次 B+ 树检索操作，最终到达叶子节点即可获取行数据。")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/direct/ea27638183894d2b9feb08e2939b069f.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("h3",{attrs:{id:"_1-2-优点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-优点"}},[_._v("#")]),_._v(" 1.2 优点")]),_._v(" "),v("ul",[v("li",[_._v("主键查询效率更高")])]),_._v(" "),v("p",[_._v("通过主键使用聚集索引查找数据比非聚集索引要快，因为非聚集索引定位到对应主键时还要多一次目标记录磁盘 IO，即回表查询。")]),_._v(" "),v("ul",[v("li",[_._v("范围查询效率更高")])]),_._v(" "),v("p",[_._v("聚集索引存储记录，记录物理存储按照索引排序，物理上有序。因此范围查询（例如，使用 BETWEEN、>、< 等条件）可以更有效地利用磁盘上的顺序数据。而非聚集索引是逻辑上有序，物理存储并不有序。")]),_._v(" "),v("ul",[v("li",[_._v("辅助索引易维护")])]),_._v(" "),v("p",[_._v("当出现行移动或者数据页分裂（Page Split）时，InnoDB 无须更新辅助索引。")]),_._v(" "),v("p",[_._v("数据页是存储数据行的物理存储单元，它通常包含一定数量的数据行，以及用于管理数据页的页头信息。")]),_._v(" "),v("p",[_._v("页分裂指的是当一个数据页已经满了，需要插入一条新的记录但无法容纳时，数据库引擎将尝试重新组织页上的数据，将一部分数据移动到新的页上，从而为新记录腾出空间。")]),_._v(" "),v("h3",{attrs:{id:"_1-3-缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-缺点"}},[_._v("#")]),_._v(" 1.3 缺点")]),_._v(" "),v("ul",[v("li",[_._v("二级索引访问需要两次索引查找。")])]),_._v(" "),v("p",[_._v("第一次找到主键值，第二次根据主键值找到行数据。")]),_._v(" "),v("ul",[v("li",[_._v("更新主键的代价高。")])]),_._v(" "),v("p",[_._v("因为将会导致被更新的行发生移动，所以 InnoDB 表主键一般定义为不可更新。")]),_._v(" "),v("ul",[v("li",[_._v("插入速度严重依赖于插入顺序。")])]),_._v(" "),v("p",[_._v("按照主键顺序插入是最快的方式，否则将会出现页分裂，严重影响性能。因此，对于 InnoDB 表，我们一般都会定义一个自增的 ID 列为主键。")]),_._v(" "),v("h2",{attrs:{id:"_2-非聚集索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-非聚集索引"}},[_._v("#")]),_._v(" 2.非聚集索引")]),_._v(" "),v("p",[_._v("按照语义，除了聚集索引，其他索引都是非聚集索引。")]),_._v(" "),v("p",[_._v("但在这里非聚集索引特指索引树叶结点存储的是「索引+数据地址」的索引。")]),_._v(" "),v("p",[_._v("非聚集索引（Nonclustered Index）的索引文件和表数据是分开的，主键索引和二级索引存储上没有任何区别。使用 B+ 树存储索引，所有节点都是索引，叶子结点存储的是「索引+数据地址」。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/direct/f57d08b12c744579a65f10932ad5af0b.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("h2",{attrs:{id:"_3-区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-区别"}},[_._v("#")]),_._v(" 3.区别")]),_._v(" "),v("ul",[v("li",[_._v("数量不同。")])]),_._v(" "),v("p",[_._v("一个表中只能有一个聚集索引，而非聚集索引可以有多个。")]),_._v(" "),v("ul",[v("li",[_._v("磁盘 IO 次数不同。")])]),_._v(" "),v("p",[_._v("聚集索引通过一次索引查询可以直接找到数据，而非聚集索引需要一次索引查询到数据地址，外加一次数据磁盘 IO。")]),_._v(" "),v("ul",[v("li",[_._v("数据组织方式不同。")])]),_._v(" "),v("p",[_._v("聚集索引的数据行在物理存储上是有序的，对于范围查询和排序操作，有序的物理存储结构也有助于减少磁盘 I/O 操作，提高查询性能。非聚集索引和数据行是分开两个文件存放，数据行在物理存储上是乱序的。")]),_._v(" "),v("ul",[v("li",[_._v("读写性能不同。")])]),_._v(" "),v("p",[_._v("聚集索引查询效率高，但插入效率低，因为需要移动数据的物理位置保证物理存储上有序。非聚集索引则反过来，插入效率高，查询效率低。")]),_._v(" "),v("hr"),_._v(" "),v("h2",{attrs:{id:"参考文献"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[_._v("#")]),_._v(" 参考文献")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/innodb-index-types.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("15.6.2.1 Clustered and Secondary Indexes"),v("OutboundLink")],1)]),_._v(" "),v("p",[v("a",{attrs:{href:"https://xiaolincoding.com/mysql/index/index_interview.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("索引常见面试题 - 小林coding"),v("OutboundLink")],1)]),_._v(" "),v("Vssue",{attrs:{title:"聚集与非聚集索引"}})],1)}),[],!1,null,null,null);v.default=r.exports}}]);